{"version":3,"sources":["logo.svg","components/itemCounter.jsx","components/basket.jsx","components/profile.jsx","components/navbar.jsx","components/item.jsx","components/products.jsx","components/shopShelf.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ItemCounter","state","react_default","a","createElement","Component","Basket","className","itemCounter","Profile","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","basket","Item","Products","item","ShopShelf","products","App","navbar","profile","shopShelf","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mLCazBC,0NAVXC,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sCALUC,cCaXC,6MAXXL,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACI,EAAD,cANKH,aCYNI,6MAZXR,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,WACOF,EAAAC,EAAAC,cAAA,iCALGC,aCgCPK,mLA5BP,OACIR,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACPL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gDACXL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,iBAAiBI,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC5Kd,EAAAC,EAAAC,cAAA,QAAMG,UAAU,yBAEpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,2BAA2BU,GAAG,uBACzCf,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeW,KAAK,KAAjC,YACAhB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mCACdL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBACVL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAAWW,KAAK,KAA7B,QAAsChB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WAAhB,eAE1CL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,YACVL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAAWW,KAAK,KAA7B,YAEJhB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,YACVL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,WAAWW,KAAK,KAA7B,cAGJhB,EAAAC,EAAAC,cAACe,EAAD,gBAtBPd,aCUNe,6MAVXnB,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BALGC,aCYJgB,6MAVXpB,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAD,cALOjB,aCWRkB,6MAVXtB,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoB,EAAD,cALQnB,aC6BToB,mLAlBX,OACEvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,cAChBL,EAAAC,EAAAC,cAACsB,EAAD,OAEFxB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,eATQvB,aCAEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SDqH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.940a6f71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass ItemCounter extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <p>Item counter test</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ItemCounter;","import React, { Component } from 'react';\r\nimport ItemCounter from './itemCounter';\r\n\r\nclass Basket extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"Basket\">\r\n                <p>Baskset test</p>\r\n                <ItemCounter/>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Basket;","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                   <p>Profile test</p>\r\n\r\n            </div>\r\n         \r\n          );\r\n    }\r\n}\r\n \r\nexport default Profile;","import React, { Component } from 'react';\r\nimport Basket from './basket';\r\n\r\nclass NavBar extends Component {\r\n    //state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"NavBar\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                            <a className=\"navbar-brand\" href=\"#\">EasyShop</a>\r\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Privacy</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">About Us</a>\r\n                            </li>\r\n                            </ul>\r\n                            <Basket/>\r\n                        </div>\r\n                    </nav>\r\n                                    \r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Item extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <p>Item test</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\nimport Item from './item';\r\n\r\nclass Products extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Item/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Products;","import React, { Component } from 'react';\r\nimport Products from './products';\r\n\r\nclass ShopShelf extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Products/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ShopShelf;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport  './App.css';\nimport Basket from'./components/basket';\nimport Profile from './components/profile';\nimport NavBar from './components/navbar';\nimport Item from './components/item';\nimport ItemCounter from './components/itemCounter';\nimport Products from './components/products';\nimport ShopShelf from './components/shopShelf';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavBar/>\n        </header>\n        <div className=\"Shop-content\">\n          <Profile/>\n          <ShopShelf/>\n        </div>\n        \n        \n     \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}